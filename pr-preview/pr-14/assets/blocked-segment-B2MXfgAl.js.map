{"version":3,"file":"blocked-segment-B2MXfgAl.js","sources":["../../static/showcases/blocked-segment.html?html-proxy&index=0.js","../../static/showcases/blocked-segment.html?html-proxy&index=1.js"],"sourcesContent":["\n  // Import the pillarbox library\n  import pillarbox from '@srgssr/pillarbox-web';\n\n  // Register a plugin to display notifications on blocked segments\n  pillarbox.registerPlugin('blockedSegmentNotification', function(options) {\n    // Get a reference to the player instance\n    const player = this;\n\n    // Wait for the player to be ready\n    player.ready(() => {\n      // Create a component for displaying the blocked segment notification\n      const blockSegmentNotification = player.addChild('component', {\n        className: 'pbw-blocked-segment-notification'\n      });\n\n      // Hide the notification initially\n      blockSegmentNotification.hide();\n\n      // Variable to store the timeout ID for clearing later\n      let timeoutId = undefined;\n\n      // Listen for the 'loadeddata' event on the player, this ensures that text tracks are available\n      player.on('loadeddata', () => {\n        // Get the text track with the ID 'srgssr-blocked-segments'\n        const blockedSegments = player.textTracks().getTrackById('srgssr-blocked-segments');\n\n        // Add a listener for the 'cuechange' event on the blocked segments text track\n        blockedSegments?.on('cuechange', () => {\n          // Check if there are active cues in the blocked segments text track\n          if (blockedSegments.activeCues.length > 0) {\n            // If there is an existing timeout, clear it\n            if (timeoutId) clearTimeout(timeoutId);\n\n            // Parse the JSON content of the active cue to get the blocked segment information\n            const blockSegment = JSON.parse(blockedSegments.activeCues[0].text);\n            const blockReason = blockSegment.blockReason;\n\n            // Update the displayed notification text with the appropriate message based on the block reason\n            blockSegmentNotification.el().textContent = options.i18n[blockReason] ?? options.i18n['UNKNOWN'];\n\n            // Show the blocked segment notification\n            blockSegmentNotification.show();\n\n            // Set a timeout to hide the notification after a specified delay\n            timeoutId = setTimeout(() => {\n              blockSegmentNotification.hide();\n              timeoutId = undefined;\n            }, options.delay);\n          }\n        });\n      });\n    });\n  });\n\n  // Create a pillarbox player instance with the blockedSegmentNotification plugin\n  const player = pillarbox(\n    'video-element-id', {\n      fill: true,\n      plugins: {\n        blockedSegmentNotification: {\n          delay: 5000, // Delay in milliseconds before hiding the notification\n          i18n: { // Labels for different block reasons\n            STARTDATE: 'ⓘ A portion of the video is not yet available',\n            ENDDATE: 'ⓘ A section of the video has expired',\n            LEGAL: 'ⓘ For legal reasons, a section of the video content is omitted',\n            COMMERCIAL: 'ⓘ A commercial break has been excluded',\n            GEOBLOCK: 'ⓘ This segment of the video is not accessible in your region',\n            AGERATING18: 'ⓘ A segment suitable for 18 years and older is omitted',\n            AGERATING12: 'ⓘ A segment suitable for 12 years and older is omitted',\n            UNKNOWN: 'ⓘ Due to an unidentified issue, a segment of the video is omitted.'\n          }\n        }\n      }\n    }\n  );\n\n  // Load the video source for the player\n  player.src({ src: 'urn:rts:video:10894383', type: 'srgssr/urn' });\n","\n  import pillarbox from '@srgssr/pillarbox-web';\n  import '../../src/layout/header/core-demo-header-component.js';\n\n  document.querySelector('#close-btn').addEventListener('click', () => {\n    window.close();\n  });\n\n  window.pillarbox = pillarbox;\n"],"names":["pillarbox","options","player","blockSegmentNotification","timeoutId","blockedSegments","blockReason"],"mappings":"mGAKEA,EAAU,eAAe,6BAA8B,SAASC,EAAS,CAEvE,MAAMC,EAAS,KAGfA,EAAO,MAAM,IAAM,CAEjB,MAAMC,EAA2BD,EAAO,SAAS,YAAa,CAC5D,UAAW,kCACnB,CAAO,EAGDC,EAAyB,KAAI,EAG7B,IAAIC,EAGJF,EAAO,GAAG,aAAc,IAAM,CAE5B,MAAMG,EAAkBH,EAAO,WAAY,EAAC,aAAa,yBAAyB,EAGlFG,GAAA,MAAAA,EAAiB,GAAG,YAAa,IAAM,CAErC,GAAIA,EAAgB,WAAW,OAAS,EAAG,CAErCD,GAAW,aAAaA,CAAS,EAIrC,MAAME,EADe,KAAK,MAAMD,EAAgB,WAAW,CAAC,EAAE,IAAI,EACjC,YAGjCF,EAAyB,GAAE,EAAG,YAAcF,EAAQ,KAAKK,CAAW,GAAKL,EAAQ,KAAK,QAGtFE,EAAyB,KAAI,EAG7BC,EAAY,WAAW,IAAM,CAC3BD,EAAyB,KAAI,EAC7BC,EAAY,MAC1B,EAAeH,EAAQ,KAAK,CACjB,CACX,EACA,CAAO,CACP,CAAK,CACL,CAAG,EAGD,MAAMC,EAASF,EACb,mBAAoB,CAClB,KAAM,GACN,QAAS,CACP,2BAA4B,CAC1B,MAAO,IACP,KAAM,CACJ,UAAW,gDACX,QAAS,uCACT,MAAO,iEACP,WAAY,yCACZ,SAAU,+DACV,YAAa,yDACb,YAAa,yDACb,QAAS,oEACV,CACF,CACF,CACF,CACL,EAGEE,EAAO,IAAI,CAAE,IAAK,yBAA0B,KAAM,aAAc,EC1EhE,SAAS,cAAc,YAAY,EAAE,iBAAiB,QAAS,IAAM,CACnE,OAAO,MAAK,CAChB,CAAG,EAED,OAAO,UAAYF"}