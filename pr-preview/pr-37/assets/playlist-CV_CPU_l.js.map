{"version":3,"file":"playlist-CV_CPU_l.js","sources":["../../node_modules/@srgssr/pillarbox-playlist/dist/pillarbox-playlist.js","../../node_modules/@srgssr/pillarbox-playlist/dist/ui/pillarbox-playlist-ui.js","../../static/showcases/playlist.html?html-proxy&index=0.js","../../static/showcases/playlist.html?html-proxy&index=1.js"],"sourcesContent":["import videojs from 'video.js';\n\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\n\n/**\n * @ignore\n * @type {typeof import('video.js/dist/types/plugin').default}\n */\nconst Plugin = videojs.getPlugin('plugin');\nconst log = videojs.log.createLogger('pillarbox-playlist');\n\n/**\n * Represents a Plugin that allows control over a playlist.\n */\nclass PillarboxPlaylist extends Plugin {\n  /**\n   * Toggles the repeat mode of the player to the opposite of its current state.\n   *\n   * @param {boolean} [force] Optional. If provided, sets the repeat mode to the specified boolean value (true or false).\n   *                          If omitted, the repeat mode will toggle to the opposite of its current state.\n   */\n  toggleRepeat(force = undefined) {\n    this.repeat = force !== null && force !== void 0 ? force : !this.repeat;\n  }\n\n  /**\n   * Whether auto-advance is enabled or not.\n   *\n   * @type boolean\n   */\n\n  /**\n   * Toggles the auto-advance mode of the player to the opposite of its current state.\n   *\n   * @param {boolean} [force] Optional. If provided, sets the auto-advance mode to the specified boolean value (true or false).\n   *                          If omitted, the auto-advance mode will toggle to the opposite of its current state.\n   */\n  toggleAutoadvance(force = undefined) {\n    this.autoadvance = force !== null && force !== void 0 ? force : !this.autoadvance;\n  }\n\n  /**\n   * Handles the 'ended' event when triggered. This method serves as a proxy to\n   * the main `ended` handler, ensuring that additional logic can be executed or\n   * making it easier to detach the event listener later.\n   *\n   * @private\n   */\n\n  /**\n   * Creates an instance of a pillarbox playlist.\n   *\n   * @param {import('video.js/dist/types/player.js').default} player The player instance.\n   * @param {Object} options Configuration options for the plugin.\n   */\n  constructor(player, options) {\n    super(player);\n    /**\n     * The items in the playlist.\n     *\n     * @type {PlaylistItem[]}\n     * @private\n     */\n    _defineProperty(this, \"items_\", []);\n    /**\n     * The current index.\n     *\n     * @type {number}\n     * @private\n     */\n    _defineProperty(this, \"currentIndex_\", -1);\n    /**\n     * Whether the repeat is enabled or not. If repeat is enabled once the last\n     * element of the playlist ends the next element will be the first one. This\n     * mode only works forwards, i.e. when advancing to the next element.\n     *\n     * @type boolean\n     */\n    _defineProperty(this, \"repeat\", false);\n    _defineProperty(this, \"autoadvance\", false);\n    _defineProperty(this, \"onEnded_\", () => this.handleEnded());\n    if (options.playlist && options.playlist.length) {\n      player.ready(() => {\n        this.load(...options.playlist);\n      });\n    }\n    this.autoadvance = !!options.autoadvance;\n    this.repeat = !!options.repeat;\n    this.player.on('ended', this.onEnded_);\n  }\n  dispose() {\n    this.player.off('ended', this.onEnded_);\n  }\n\n  /**\n   * Loads a playlist into the player. This method will load the first element\n   * in the playlist. Use it to initialize the playlist.\n   *\n   * Note: A copy of the playlist items array is made internally to ensure that\n   * external modifications to the array do not affect the internal state and\n   * vice versa.\n   *\n   * @param {PlaylistItem[]} items The playlist items to load.\n   */\n  load(items) {\n    this.items_ = [...items];\n    this.select(0);\n  }\n\n  /**\n   * Adds one or more items at the end of the playlist. This method will not\n   * load any of the elements. Use it to add items while the playlist is\n   * running.\n   *\n   * @param {...PlaylistItem} items the items to add to the playlist.\n   */\n  push(...items) {\n    this.items_.push(...items);\n    this.updateState_();\n  }\n\n  /**\n   * Modifies the contents of the playlist by removing or replacing existing\n   * elements and/or adding new elements.\n   *\n   * The method also adjusts currentIndex accordingly if items are added or\n   * removed in such a way that it affects the currentIndex.\n   *\n   * If the current item is deleted then the currentIndex becomes -1, the\n   * current element will continue playing but the next element will be the\n   * first element in the playlist.\n   *\n   * @param {number} start The zero-based location in the array from which to\n   *                       start removing elements.\n   * @param {number} deleteCount The number of elements to remove.\n   * @param {...PlaylistItem} items The items to add to the playlist.\n   *\n   * @return {PlaylistItem[]} An array containing the deleted elements.\n   */\n  splice(start, deleteCount, ...items) {\n    const itemsAddedCount = items.length;\n    const deletedElements = this.items_.splice(start, deleteCount, ...items);\n    const deletedElementsCount = deletedElements.length;\n    if (this.currentIndex_ >= start && this.currentIndex_ < start + deletedElementsCount) {\n      // Current item was removed, set currentIndex to -1\n      this.currentIndex_ = -1;\n    } else if (this.currentIndex_ >= start) {\n      // Adjust currentIndex based on the net items added/removed\n      this.currentIndex_ = this.currentIndex_ - deletedElementsCount + itemsAddedCount;\n    }\n    this.updateState_();\n    return deletedElements;\n  }\n\n  /**\n   * Clears the internal playlist. This method empties the playlist and resets\n   * the current index to -1.\n   *\n   * Note that this method does not stop the currently playing media or unload it.\n   */\n  clear() {\n    this.items_ = [];\n    this.currentIndex_ = -1;\n    this.updateState_();\n  }\n\n  /**\n   * Get the currently playing index.\n   *\n   * @returns {number} the currently playing index.\n   */\n  get currentIndex() {\n    return this.currentIndex_;\n  }\n\n  /**\n   * Get the currently playing item.\n   *\n   * @returns {PlaylistItem} the currently playing item.\n   */\n  get currentItem() {\n    return this.items_[this.currentIndex_];\n  }\n\n  /**\n   * Get the current playlist items.This is a copy of the internal list\n   * modifying this list will not affect the playlist. use `push` and `splice`\n   * to modify the internal list.\n   *\n   * @returns {PlaylistItem[]} the current list of items.\n   */\n  get items() {\n    return [...this.items_];\n  }\n\n  /**\n   * Plays the playlist item at the given index. If the index is not in\n   * the playlist this method has no effect.\n   *\n   * @param {number} index The index of the item to play.\n   */\n  // eslint-disable-next-line max-statements\n  select(index) {\n    if (index < 0 || index >= this.items_.length) {\n      log.warn(`Index: ${index} is out of bounds (The current playlist has ${this.items_.length} elements)`);\n      return;\n    }\n    if (index === this.currentIndex_) {\n      log.warn(`Index: ${index} is already selected`);\n      return;\n    }\n    const item = this.items_[index];\n    this.player.src(item.sources);\n    this.player.poster(item.poster);\n    this.currentIndex_ = index;\n    this.updateState_();\n  }\n\n  /**\n   * Advances to the next item in the playlist. If repeat mode is enabled, then\n   * once the last item of the playlist is reached this function will play\n   * the first one.\n   */\n  next() {\n    if (this.hasNext()) {\n      this.select(this.currentIndex_ + 1);\n      return;\n    }\n    if (this.repeat) this.select(0);\n  }\n\n  /**\n   * Whether an element exists in the playlist after the one that is currently playing.\n   * If `repeat` mode is enabled this function will still return `false` when the\n   * current position is the last item in the playlist.\n   *\n   * @returns {boolean} true if there is an element after, false otherwise.\n   */\n  hasNext() {\n    return this.currentIndex_ + 1 < this.items_.length;\n  }\n\n  /**\n   * Moves to the previous item in the playlist.\n   */\n  previous() {\n    this.select(this.currentIndex_ - 1);\n  }\n\n  /**\n   * Whether an element exists before the one that is currently playing.\n   * If `repeat` mode is enabled this function will still return `false` when the\n   * current position is the first item in the playlist.\n   *\n   * @returns {boolean} true if there is an element before, false otherwise.\n   */\n  hasPrevious() {\n    return this.currentIndex_ > 0;\n  }\n\n  /**\n   * Handles the `ended` event. If auto-advance is enabled then the next item\n   * will be played, otherwise nothing happens.\n   */\n  handleEnded() {\n    if (!this.autoadvance) {\n      return;\n    }\n    this.next();\n  }\n\n  /**\n   * Shuffles the order of the items in the playlist randomly.\n   * This method implements the Fisher-Yates shuffle algorithm to\n   * ensure each permutation of the array elements is equally likely.\n   */\n  shuffle() {\n    for (let i = this.items_.length - 1; i > 0; i -= 1) {\n      // Pick a remaining elementâ€¦\n      const j = Math.floor(Math.random() * (i + 1));\n\n      // And swap it with the current element.\n      [this.items_[i], this.items_[j]] = [this.items_[j], this.items_[i]];\n\n      // Check if the currentIndex was swapped, update if necessary\n      if (this.currentIndex_ === i) {\n        this.currentIndex_ = j;\n      } else if (this.currentIndex_ === j) {\n        this.currentIndex_ = i;\n      }\n    }\n    this.updateState_();\n  }\n\n  /**\n   * Updates the component's state with the current items and index.\n   *\n   * @private\n   */\n  updateState_() {\n    this.setState({\n      // Converts the items array to a JSON string before setting it in the state.\n      // Otherwise the change is not detected.\n      items: JSON.stringify(this.items_),\n      currentIndex: this.currentIndex_\n    });\n  }\n}\nvideojs.registerPlugin('pillarboxPlaylist', PillarboxPlaylist);\n\n/**\n * Represents a single item in the playlist.\n *\n * @typedef {Object} PlaylistItem\n * @property {any[]} sources The array of media sources for the playlist item.\n * @property {string} poster A url for the poster.\n * @property {Object} data The metadata for the playlist item. In this object\n *                          you can store properties related to the playlist\n *                          item such as `title`, the `duration`,\n *                          and other relevant metadata.\n */\n\nexport { PillarboxPlaylist as default };\n//# sourceMappingURL=pillarbox-playlist.js.map\n","import videojs from 'video.js';\n\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\n\n/**\n * @ignore\n * @type {typeof import('video.js/dist/types/menu/menu-item').default}\n */\nconst Button$2 = videojs.getComponent('Button');\n\n/**\n * Class representing a playlist menu item in the Pillarbox plugin.\n */\nlet PillarboxPlaylistMenuItem$1 = class PillarboxPlaylistMenuItem extends Button$2 {\n  /**\n   * Creates an instance of PillarboxPlaylistMenuItem.\n   * @param {Object} player - The video.js player instance.\n   * @param {Object} options - Options for the menu item.\n   * @param {number} options.index - The index of the playlist item.\n   * @param {Object} options.item - The playlist item data.\n   * @param {Object} options.item.data - The data for the playlist item.\n   * @param {string} options.item.data.title - The title of the playlist item.\n   * @param {number} options.item.data.duration - The duration of the playlist item.\n   */\n  constructor(player, options) {\n    var _this$options_$item$d, _this$options_$item$d2;\n    super(player, options);\n    this.selected(options.index === this.playlist().currentIndex);\n    this.controlText(`${(_this$options_$item$d = this.options_.item.data) === null || _this$options_$item$d === void 0 ? void 0 : _this$options_$item$d.title} - ${videojs.formatTime((_this$options_$item$d2 = this.options_.item.data) === null || _this$options_$item$d2 === void 0 ? void 0 : _this$options_$item$d2.duration)}`);\n  }\n\n  /**\n   * Gets the Pillarbox playlist associated with the player.\n   *\n   * @returns {import('/pillarbox-playlist.js').default} The Pillarbox playlist.\n   */\n  playlist() {\n    return this.player().pillarboxPlaylist();\n  }\n\n  /**\n   * Handles the click event on the menu item.\n   *\n   * @param {Event} event - The click event.\n   */\n  handleClick(event) {\n    super.handleClick(event);\n    this.playlist().select(this.options_.index);\n  }\n\n  /**\n   * Sets the selected state of the menu item.\n   *\n   * @param {boolean} selected - Whether the menu item is selected.\n   */\n  selected(selected) {\n    this.toggleClass('vjs-selected', selected);\n  }\n\n  /**\n   * Builds the CSS class string for the menu item.\n   *\n   * @returns {string} The CSS class string.\n   */\n  buildCSSClass() {\n    return `pbw-playlist-item-button vjs-visible-text ${super.buildCSSClass()}`;\n  }\n};\nvideojs.registerComponent('PillarboxPlaylistMenuItem', PillarboxPlaylistMenuItem$1);\n\n/**\n * @ignore\n * @type {typeof import('./pillarbox-playlist-menu-item.js').default}\n */\nconst PillarboxPlaylistMenuItem = videojs.getComponent('PillarboxPlaylistMenuItem');\n/**\n * @ignore\n * @type {typeof import('video.js/dist/types/button').default}\n */\nconst Button$1 = videojs.getComponent('Button');\n/**\n * @ignore\n * @type {typeof import('video.js/dist/types/component').default}\n */\nconst Component = videojs.getComponent('Component');\n/**\n * @ignore\n * @type {typeof import('video.js/dist/types/modal-dialog').default}\n */\nconst ModalDialog = videojs.getComponent('ModalDialog');\n\n/**\n * PlaylistMenuDialog is a custom dialog that extends the ModalDialog class.\n * It is designed to manage and display a playlist with various controls.\n */\nclass PlaylistMenuDialog extends ModalDialog {\n  /**\n   * Creates an instance of PlaylistMenuDialog.\n   *\n   * @param {import('@srgssr/pillarbox-web').Player} player - The pillarbox player instance.\n   * @param {Object} options - Options for the dialog.\n   */\n  constructor(player, options) {\n    options.temporary = false;\n    super(player, options);\n    /**\n     * Handles the 'statechanged' event when triggered by the playlist. This method\n     * serves as a proxy to the main `statechanged` handler, ensuring that additional\n     * logic can be executed or making it easier to detach the event listener later.\n     *\n     * @private\n     */\n    _defineProperty(this, \"_onPlaylistStateChanged\", ({\n      changes\n    }) => {\n      if ('items' in changes) {\n        this.removeItems();\n        this.renderItems();\n      }\n      if ('currentIndex' in changes) {\n        this.select(changes.currentIndex.to);\n      }\n    });\n    this.fill();\n    this.renderComponent();\n    this.playlist().on('statechanged', this._onPlaylistStateChanged);\n  }\n  buildCSSClass() {\n    return `pbw-playlist-dialog ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Dispose of the PlaylistMenuDialog instance.\n   */\n  dispose() {\n    this.playlist().off('statechanged', this._onPlaylistStateChanged);\n    super.dispose();\n  }\n\n  /**\n   * Get the playlist instance associated with the player.\n   *\n   * @returns {import('pillarbox-playlist.js').default} The playlist instance.\n   */\n  playlist() {\n    return this.player().pillarboxPlaylist();\n  }\n\n  /**\n   * Update the playlist item UI with the selected index.\n   *\n   * @param {number} index - The index of the item to select.\n   */\n  select(index) {\n    const itemList = this.getChild('PillarboxPlaylistMenuItemsList');\n    itemList.children().filter(item => item.name() === 'PillarboxPlaylistMenuItem').map(item => item.getChild('PillarboxPlaylistMenuItemButton')).forEach(button => button.selected(index === button.options().index));\n  }\n\n  /**\n   * Remove all playlist items from the dialog.\n   */\n  removeItems() {\n    this.removeChild(this.getChild('PillarboxPlaylistMenuItemsList'));\n  }\n\n  /**\n   * Render the playlist items in the dialog.\n   */\n  renderItems() {\n    const itemListEl = new Component(this.player(), {\n      name: 'PillarboxPlaylistMenuItemsList',\n      el: videojs.dom.createEl('ol', {\n        className: 'pbw-playlist-items'\n      })\n    });\n    this.playlist().items.forEach((item, index) => {\n      const itemEl = new Component(this.player(), {\n        name: 'PillarboxPlaylistMenuItem',\n        el: videojs.dom.createEl('li', {\n          className: 'pbw-playlist-item'\n        })\n      });\n      itemEl.addChild(new PillarboxPlaylistMenuItem(this.player(), {\n        item,\n        index,\n        name: 'PillarboxPlaylistMenuItemButton'\n      }));\n      itemListEl.addChild(itemEl);\n    });\n    this.addChild(itemListEl);\n  }\n\n  /**\n   * Create the playlist control buttons.\n   *\n   * @returns {Component} The component containing the playlist control buttons.\n   */\n  createControls() {\n    const playlistControls = new Component(this.player(), {\n      name: 'PlaylistControls',\n      className: 'pbw-playlist-controls'\n    });\n    playlistControls.addChild(this.createRepeatButton());\n    playlistControls.addChild(this.createSuffleButton());\n    playlistControls.addChild(this.createPreviousItemButton());\n    playlistControls.addChild(this.createNextItemButton());\n    return playlistControls;\n  }\n\n  /**\n   * Create the \"Previous Item\" button.\n   *\n   * @returns {Button} The button to go to the previous item in the playlist.\n   */\n  createPreviousItemButton() {\n    return this.setButtonIcon(new Button$1(this.player(), {\n      name: 'PreviousItemButton',\n      controlText: this.localize('Previous Item'),\n      clickHandler: () => this.playlist().previous()\n    }), 'previous-item');\n  }\n\n  /**\n   * Create the \"Repeat\" button.\n   *\n   * @returns {Button} The button to toggle repeat mode in the playlist.\n   */\n  createRepeatButton() {\n    const repeatButton = this.setButtonIcon(new Button$1(this.player(), {\n      name: 'RepeatButton',\n      controlText: this.localize('Repeat'),\n      className: this.playlist().repeat ? 'vjs-selected' : '',\n      clickHandler: () => {\n        this.playlist().toggleRepeat();\n        repeatButton.toggleClass('vjs-selected', this.playlist().repeat);\n      }\n    }), 'repeat');\n    return repeatButton;\n  }\n\n  /**\n   * Create the \"Shuffle\" button.\n   *\n   * @returns {Button} The button to shuffle the playlist.\n   */\n  createSuffleButton() {\n    return this.setButtonIcon(new Button$1(this.player(), {\n      name: 'ShuffleButton',\n      controlText: this.localize('Shuffle'),\n      clickHandler: () => this.playlist().shuffle()\n    }), 'shuffle');\n  }\n\n  /**\n   * Create the \"Next Item\" button.\n   *\n   * @returns {Button} The button to go to the next item in the playlist.\n   */\n  createNextItemButton() {\n    return this.setButtonIcon(new Button$1(this.player(), {\n      name: 'NextItemButton',\n      controlText: this.localize('Next Item'),\n      clickHandler: () => this.playlist().next()\n    }), 'next-item');\n  }\n\n  /**\n   * Set the icon for a button.\n   *\n   * @param {Button} button The button to set the icon for.\n   * @param {string} iconName The name of the icon to set.\n   *\n   * @returns {Button} The button with the icon set.\n   */\n  setButtonIcon(button, iconName) {\n    button.setIcon(iconName);\n    this.player().ready(() => {\n      button.$('.vjs-icon-placeholder').classList.toggle(`vjs-icon-${iconName}`, true);\n    });\n    return button;\n  }\n\n  /**\n   * Render the component, including controls and playlist items.\n   */\n  renderComponent() {\n    this.addChild(this.createControls());\n    this.renderItems();\n  }\n\n  /**\n   * Handles the language change event to update the control text.\n   */\n  handleLanguagechange() {\n    const controls = this.getChild('PlaylistControls');\n    controls.getChild('PreviousItemButton').controlText(this.localize('Previous Item'));\n    controls.getChild('RepeatButton').controlText(this.localize('Repeat'));\n    controls.getChild('ShuffleButton').controlText(this.localize('Shuffle'));\n    controls.getChild('NextItemButton').controlText(this.localize('Next Item'));\n  }\n}\nvideojs.registerComponent('PlaylistMenuDialog', PlaylistMenuDialog);\n\nconst Playlist$4 = \"Wiedergabeliste\";\nconst Repeat$4 = \"Wiederholen\";\nconst Shuffle$4 = \"Mischen\";\nconst de = {\n\t\"Next Item\": \"NÃ¤chstes Element\",\n\tPlaylist: Playlist$4,\n\t\"Previous Item\": \"Vorheriges Element\",\n\tRepeat: Repeat$4,\n\tShuffle: Shuffle$4\n};\n\nconst de$1 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({\n  __proto__: null,\n  Playlist: Playlist$4,\n  Repeat: Repeat$4,\n  Shuffle: Shuffle$4,\n  default: de\n}, Symbol.toStringTag, { value: 'Module' }));\n\nconst Playlist$3 = \"Playlist\";\nconst Repeat$3 = \"Repeat\";\nconst Shuffle$3 = \"Shuffle\";\nconst en = {\n\t\"Next Item\": \"Next Item\",\n\tPlaylist: Playlist$3,\n\t\"Previous Item\": \"Previous Item\",\n\tRepeat: Repeat$3,\n\tShuffle: Shuffle$3\n};\n\nconst en$1 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({\n  __proto__: null,\n  Playlist: Playlist$3,\n  Repeat: Repeat$3,\n  Shuffle: Shuffle$3,\n  default: en\n}, Symbol.toStringTag, { value: 'Module' }));\n\nconst Playlist$2 = \"Liste de lecture\";\nconst Repeat$2 = \"RÃ©pÃ©ter\";\nconst Shuffle$2 = \"MÃ©langer\";\nconst fr = {\n\t\"Next Item\": \"Ã‰lÃ©ment suivant\",\n\tPlaylist: Playlist$2,\n\t\"Previous Item\": \"Ã‰lÃ©ment prÃ©cÃ©dent\",\n\tRepeat: Repeat$2,\n\tShuffle: Shuffle$2\n};\n\nconst fr$1 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({\n  __proto__: null,\n  Playlist: Playlist$2,\n  Repeat: Repeat$2,\n  Shuffle: Shuffle$2,\n  default: fr\n}, Symbol.toStringTag, { value: 'Module' }));\n\nconst Playlist$1 = \"Playlist\";\nconst Repeat$1 = \"Ripeti\";\nconst Shuffle$1 = \"Mescola\";\nconst it = {\n\t\"Next Item\": \"Elemento successivo\",\n\tPlaylist: Playlist$1,\n\t\"Previous Item\": \"Elemento precedente\",\n\tRepeat: Repeat$1,\n\tShuffle: Shuffle$1\n};\n\nconst it$1 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({\n  __proto__: null,\n  Playlist: Playlist$1,\n  Repeat: Repeat$1,\n  Shuffle: Shuffle$1,\n  default: it\n}, Symbol.toStringTag, { value: 'Module' }));\n\nconst Playlist = \"Glista da reprodukziun\";\nconst Repeat = \"Repeter\";\nconst Shuffle = \"Maschadar\";\nconst rm = {\n\t\"Next Item\": \"Element proxim\",\n\tPlaylist: Playlist,\n\t\"Previous Item\": \"Element precedent\",\n\tRepeat: Repeat,\n\tShuffle: Shuffle\n};\n\nconst rm$1 = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({\n  __proto__: null,\n  Playlist,\n  Repeat,\n  Shuffle,\n  default: rm\n}, Symbol.toStringTag, { value: 'Module' }));\n\nvideojs.addLanguage('de', de$1);\nvideojs.addLanguage('en', en$1);\nvideojs.addLanguage('fr', fr$1);\nvideojs.addLanguage('it', it$1);\nvideojs.addLanguage('rm', rm$1);\n\n/**\n * @ignore\n * @type {typeof import('video.js/dist/types/button').default}\n */\nconst Button = videojs.getComponent('Button');\n\n/**\n * Class representing a button that opens the playlist menu.\n */\nclass PillarboxPlaylistButton extends Button {\n  /**\n   * Creates an instance of PillarboxPlaylistButton.\n   *\n   * @param {Object} player - The video.js player instance.\n   * @param {Object} options - Options for the button.\n   */\n  constructor(player, options) {\n    super(player, options);\n    /**\n     * Handles the 'statechanged' event when triggered by the playlist. This method\n     * serves as a proxy to the main `statechanged` handler, ensuring that additional\n     * logic can be executed or making it easier to detach the event listener later.\n     *\n     * @private\n     */\n    _defineProperty(this, \"_onPlaylistStateChanged\", ({\n      changes\n    }) => {\n      if ('items' in changes) {\n        this.toggleVisibility();\n      }\n    });\n    this.handleLanguagechange();\n    this.setIcon('chapters');\n    player.ready(() => {\n      this.$('.vjs-icon-placeholder').classList.toggle('vjs-icon-chapters', true);\n      player.addChild('PlaylistMenuDialog', {\n        pauseOnOpen: false\n      });\n    });\n    this.playlist().on('statechanged', this._onPlaylistStateChanged);\n  }\n\n  /**\n   * Dispose of the PillarboxPlaylistButton instance.\n   */\n  dispose() {\n    this.playlist().off('statechanged', this._onPlaylistStateChanged);\n    super.dispose();\n  }\n\n  /**\n   * Get the playlist instance associated with the player.\n   *\n   * @returns {import('pillarbox-playlist.js').default} The playlist instance.\n   */\n  playlist() {\n    return this.player().pillarboxPlaylist();\n  }\n\n  /**\n   * Builds the CSS class string for the button.\n   *\n   * @returns {string} The CSS class string.\n   */\n  buildCSSClass() {\n    return `pbw-playlist-button vjs-hidden ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Handles the click event on the button.\n   *\n   * @param {Event} event - The click event.\n   */\n  handleClick(event) {\n    super.handleClick(event);\n    this.player().getChild('PlaylistMenuDialog').open();\n  }\n\n  /**\n   * Handles the language change event to update the control text.\n   */\n  handleLanguagechange() {\n    this.controlText(this.localize('Playlist'));\n  }\n\n  /**\n   * Toggles the visibility of the element based on the presence of items in the playlist.\n   */\n  toggleVisibility() {\n    if (this.playlist().items.length > 0) {\n      this.show();\n      return;\n    }\n    this.hide();\n  }\n}\nvideojs.registerComponent('PillarboxPlaylistButton', PillarboxPlaylistButton);\n\n/**\n * @ignore\n * @type {typeof import('video.js/dist/types/plugin').default}\n */\nconst Plugin = videojs.getPlugin('plugin');\n\n/**\n *  A plugin that adds a playlist button to the control bar.\n */\nclass PillarboxPlaylistUI extends Plugin {\n  /**\n   * Creates an instance of the pillarbox playlist UI.\n   *\n   * @param {Player} player - The video.js player instance.\n   * @param {Object} options - Plugin options.\n   * @param {string} [options.insertChildBefore] - The control bar child name before which the playlist button should be inserted.\n   */\n  constructor(player, options) {\n    super(player);\n    player.ready(function () {\n      if (!options.insertChildBefore) {\n        player.controlBar.addChild('PillarboxPlaylistButton');\n        return;\n      }\n      const controlBar = player.controlBar;\n      const insertBefore = controlBar.getChild(options.insertChildBefore);\n      const index = controlBar.children().indexOf(insertBefore);\n      controlBar.addChild('PillarboxPlaylistButton', {}, index);\n    });\n  }\n}\nvideojs.registerPlugin('pillarboxPlaylistUI', PillarboxPlaylistUI);\n\nexport { PillarboxPlaylistUI as default };\n//# sourceMappingURL=pillarbox-playlist-ui.js.map\n","\n  // Import the pillarbox library and the SrgSsr utility class\n  import { default as pillarbox, SrgSsr } from '@srgssr/pillarbox-web';\n  // Import the playlist plugin for pillarbox\n  import '@srgssr/pillarbox-playlist';\n  // Import the playlist UI plugin for pillarbox\n  import '@srgssr/pillarbox-playlist/ui';\n\n  // Create a pillarbox player instance with the playlist plugin\n  const player = pillarbox('video-element-id', {\n    // Activate autoplay to automatically start the next element\n    autoplay: true,\n    plugins: {\n      // Configure the playlist plugin\n      pillarboxPlaylist: { autoadvance: true, repeat: true },\n      // Configure the playlist UI plugin and specify where to insert it in the UI\n      pillarboxPlaylistUI: { insertChildBefore: 'fullscreenToggle' }\n    }\n  });\n\n  // Define an array of video sources\n  const sources = [\n    'urn:rts:video:14827742',\n    'urn:srf:video:05457f66-fd67-4131-8e0a-6d85743efc39',\n    'urn:rtr:video:33136b80-bec6-40cd-a771-b8954c805098',\n    'urn:rts:video:9883196',\n  ];\n\n  Promise.all(sources.map(async urn => {\n    // Fetch the media composition data for each URN\n    const mediaComposition = await SrgSsr.getMediaComposition(urn, SrgSsr.dataProvider(player));\n    // Get the main chapter of the media composition\n    const mainChapter = mediaComposition.getMainChapter();\n\n    return {\n      // Define the sources of this playlist item URL and type\n      sources: [{ src: urn, type: 'srgssr/urn' }],\n      // Define the title and duration in seconds\n      data: { title: mainChapter.title, duration: mainChapter.duration / 1000 },\n      // Define the poster image\n      poster: mainChapter.imageUrl\n    };\n  })).then(playlist => {\n    // Load the playlist\n    player.pillarboxPlaylist().load(playlist);\n  });\n","\n  import pillarbox from '@srgssr/pillarbox-web';\n  import '../../src/layout/header/core-demo-header-component.js';\n\n  document.querySelector('#close-btn').addEventListener('click', () => {\n    window.close();\n  });\n\n  window.pillarbox = pillarbox;\n"],"names":["_defineProperty","e","r","t","_toPropertyKey","_toPrimitive","i","Plugin","videojs","log","PillarboxPlaylist","force","player","options","items","start","deleteCount","itemsAddedCount","deletedElements","deletedElementsCount","index","item","j","Button$2","PillarboxPlaylistMenuItem$1","_this$options_$item$d","_this$options_$item$d2","event","selected","PillarboxPlaylistMenuItem","Button$1","Component","ModalDialog","PlaylistMenuDialog","changes","button","itemListEl","itemEl","playlistControls","repeatButton","iconName","controls","Playlist$4","Repeat$4","Shuffle$4","de","de$1","Playlist$3","Repeat$3","Shuffle$3","en","en$1","Playlist$2","Repeat$2","Shuffle$2","fr","fr$1","Playlist$1","Repeat$1","Shuffle$1","it","it$1","Playlist","Repeat","Shuffle","rm","rm$1","Button","PillarboxPlaylistButton","PillarboxPlaylistUI","controlBar","insertBefore","pillarbox","sources","urn","mainChapter","SrgSsr","playlist"],"mappings":"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","x_google_ignoreList":[0,1]}