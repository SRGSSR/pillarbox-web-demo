{"version":3,"file":"thumbnail-preview-DM1JE6Gt.js","sources":["../../node_modules/@srgssr/thumbnail-preview/dist/thumbnail-preview.js","../../static/showcases/thumbnail-preview.html?html-proxy&index=0.js","../../static/showcases/thumbnail-preview.html?html-proxy&index=1.js"],"sourcesContent":["import videojs from 'video.js';\n\nconst version = \"1.0.0\";\n\nfunction _assertClassBrand(e, t, n) {\n  if (\"function\" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n;\n  throw new TypeError(\"Private element is not present on this object\");\n}\nfunction _checkPrivateRedeclaration(e, t) {\n  if (t.has(e)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n}\nfunction _classPrivateFieldGet2(s, a) {\n  return s.get(_assertClassBrand(s, a));\n}\nfunction _classPrivateFieldInitSpec(e, t, a) {\n  _checkPrivateRedeclaration(e, t), t.set(e, a);\n}\nfunction _classPrivateFieldSet2(s, a, r) {\n  return s.set(_assertClassBrand(s, a), r), r;\n}\n\n/**\n * @ignore\n * @type {typeof import('video.js/dist/types/component').default}\n */\nconst Component = videojs.getComponent('Component');\nconst log$1 = videojs.log.createLogger('thumbnail-preview-overlay');\n\n/**\n * Represents a ThumbnailPreviewOverlay component for the videojs player.\n * Shows video thumbnails on hover or seek over the progress bar using sprite images.\n */\nvar _onCancel = /*#__PURE__*/new WeakMap();\nvar _onMove = /*#__PURE__*/new WeakMap();\nvar _onPlayerResize = /*#__PURE__*/new WeakMap();\nvar _onEmpty = /*#__PURE__*/new WeakMap();\nvar _active = /*#__PURE__*/new WeakMap();\nclass ThumbnailPreviewOverlay extends Component {\n  /**\n   * Creates an instance of ThumbnailPreviewOverlay.\n   *\n   * @param {import('video.js/dist/types/player.js').default} player - The video.js player instance.\n   * @param {Object} options - Configuration options.\n   * @param {ThumbnailSpriteOptions} [options.sprite] - Sprite sheet configuration.\n   * @param {BreakpointCoefficients} [options.breakpointsCoeficients] - Coefficients for responsive scaling.\n   * @param {number} [options.displayThresholdHeight] - Height threshold under which the thumbnail is hidden.\n   * @param {number} [options.resetPositionDelay=300] - Delay in milliseconds before resetting the thumbnail position after canceling (defaults to 300ms).\n   */\n  constructor(player, options = {}) {\n    super(player, options);\n    /**\n     * Handler for canceling the preview display.\n     *\n     * This method serves as a proxy to the main `resetThumbnailPosition` handler,\n     * ensuring that additional logic can be executed or making it easier to\n     * detach the event listener later.\n     *\n     * @private\n     */\n    _classPrivateFieldInitSpec(this, _onCancel, () => this.resetThumbnailPosition());\n    /**\n     * Handler for pointer movement over the progress bar.\n     *\n     * This method serves as a proxy to the main `onMove` handler, ensuring\n     * that additional logic can be executed or making it easier to detach the\n     * event listener later.\n     *\n     * @private\n     */\n    _classPrivateFieldInitSpec(this, _onMove, e => this.onMove(e));\n    /**\n     * Handler for player resize events to adjust thumbnail display.\n     *\n     * This method serves as a proxy to the main `updateThumbnailVisibility`\n     * handler, ensuring that additional logic can be executed or making it\n     * easier to detach the event listener later.\n     *\n     * @private\n     */\n    _classPrivateFieldInitSpec(this, _onPlayerResize, () => this.updateThumbnailVisibility());\n    /**\n     * Private handler for the emptied event to reset the sprite state.\n     *\n     * This method serves as a proxy to the main `resetSprite` handler, ensuring\n     * that additional logic can be executed or making it easier to detach the\n     * event listener later.\n     *\n     * @private\n     */\n    _classPrivateFieldInitSpec(this, _onEmpty, () => this.resetSprite());\n    /**\n     * Flag indicating whether the component has active listeners.\n     *\n     * @private\n     * @type {boolean}\n     */\n    _classPrivateFieldInitSpec(this, _active, false);\n    this.player().on('emptied', _classPrivateFieldGet2(_onEmpty, this));\n  }\n\n  /**\n   * Initializes the ThumbnailPreview component.\n   *\n   * When properly configured, it attaches the necessary listeners and\n   * resizes the thumbnail holder to match the expected layout.\n   */\n  init() {\n    if (this.options().sprite.url) {\n      this.initListeners();\n      this.resizeThumbnail();\n      this.thumbnail.src = this.options().sprite.url;\n      this.updateThumbnailVisibility();\n    } else {\n      this.resetSprite();\n    }\n  }\n\n  /**\n   * Retrieves the progress control component from the player's control bar.\n   *\n   * @returns {import('video.js/dist/types/control-bar/progress-control/progress-control').default} The progress control component, if available.\n   */\n  getProgressControl() {\n    var _this$player$controlB;\n    return (_this$player$controlB = this.player().controlBar) === null || _this$player$controlB === void 0 ? void 0 : _this$player$controlB.progressControl;\n  }\n\n  /**\n   * Updates the sprite metadata and image source.\n   *\n   * @param {ThumbnailSpriteOptions} sprite - New sprite sheet configuration.\n   */\n  updateSprite(sprite) {\n    this.options({\n      sprite\n    });\n    this.init();\n  }\n\n  /**\n   * Resets the sprite state by removing event listeners and hiding the component.\n   */\n  resetSprite() {\n    this.removeListeners();\n    this.hide();\n  }\n\n  /**\n   * Initializes event listeners and verifies required components.\n   */\n  initListeners() {\n    if (_classPrivateFieldGet2(_active, this)) return;\n    const progressControl = this.getProgressControl();\n    progressControl.on('pointermove', _classPrivateFieldGet2(_onMove, this));\n    progressControl.on('pointerleave', _classPrivateFieldGet2(_onCancel, this));\n    this.player().on('userinactive', _classPrivateFieldGet2(_onCancel, this));\n    this.player().on('playerresize', _classPrivateFieldGet2(_onPlayerResize, this));\n    _classPrivateFieldSet2(_active, this, true);\n  }\n\n  /**\n   * Removes all event listeners attached during thumbnail preview activation.\n   *\n   * Prevents unexpected behavior when the component is no longer active.\n   */\n  removeListeners() {\n    if (!_classPrivateFieldGet2(_active, this)) return;\n    const progressControl = this.getProgressControl();\n    progressControl.off('pointermove', _classPrivateFieldGet2(_onMove, this));\n    progressControl.off('pointerleave', _classPrivateFieldGet2(_onCancel, this));\n    this.player().off('userinactive', _classPrivateFieldGet2(_onCancel, this));\n    this.player().off('playerresize', _classPrivateFieldGet2(_onPlayerResize, this));\n    _classPrivateFieldSet2(_active, this, false);\n  }\n\n  /**\n   * Cleans up event listeners when the component is disposed.\n   */\n  dispose() {\n    this.player().off('empty', _classPrivateFieldGet2(_onEmpty, this));\n    this.removeListeners();\n    super.dispose();\n  }\n\n  /**\n   * Updates the visibility of the thumbnail preview based on player height.\n   *\n   * Hides the preview if the player's height is below the configured threshold;\n   * otherwise, shows it. Always resizes the thumbnail regardless.\n   */\n  updateThumbnailVisibility() {\n    const height = this.player().currentDimension('height');\n    this.resizeThumbnail();\n    if (height < this.options().displayThresholdHeight) {\n      this.hide();\n      return;\n    }\n    this.show();\n  }\n\n  /**\n   * Resets the thumbnail position.\n   */\n  resetThumbnailPosition() {\n    var _this$options$resetPo;\n    setTimeout(() => {\n      this.el().style.transform = 'translateX(-1000px)';\n    }, (_this$options$resetPo = this.options().resetPositionDelay) !== null && _this$options$resetPo !== void 0 ? _this$options$resetPo : 300);\n  }\n\n  /**\n   * Handles movement over the progress bar and updates the thumbnail accordingly.\n   *\n   * @param {Event} event - Mouse or touch event triggering the move.\n   */\n  onMove(event) {\n    const progressControl = this.getProgressControl();\n    if (!progressControl) {\n      log$1.error('progressControl is missing or invalid during mouse move.');\n      return;\n    }\n    const rect = videojs.dom.getBoundingClientRect(progressControl.el());\n    const point = ThumbnailPreviewOverlay.calculatePointBoundary(videojs.dom.getPointerPosition(progressControl.el(), event).x);\n    const position = this.calculateThumbnailHolderPosition(rect, point);\n    const seekingTime = Math.floor(this.player().duration() * point);\n    this.el().style.transform = `translateX(${position}px)`;\n    this.calculateFrame(seekingTime);\n  }\n\n  /**\n   * Ensures a normalized value between 0 and 1 for the pointer position.\n   *\n   * @param {number} xPoint - Normalized horizontal position from pointer.\n   * @returns {number} Clamped value between 0 and 1.\n   */\n  static calculatePointBoundary(xPoint) {\n    return Math.max(0, Math.min(xPoint, 1));\n  }\n\n  /**\n   * Calculates the horizontal position for the thumbnail holder to stay within bounds.\n   *\n   * @param {DOMRect} rect - Bounding rectangle of the progress control.\n   * @param {number} point - Normalized pointer position (0â€“1).\n   *\n   * @returns {number} Pixel offset from the left.\n   */\n  calculateThumbnailHolderPosition(rect, point) {\n    let position = rect.width * point - this.width() / 2;\n    const compoundMargin = 28; // keeps the thumbnail align with the progress holder\n    const rightBoundary = rect.right - this.width() - compoundMargin;\n    const leftBoundary = rect.left * -1 + compoundMargin;\n    return Math.max(leftBoundary, Math.min(rightBoundary, position));\n  }\n\n  /**\n   * Calculates and sets the sprite frame based on the seeking time.\n   *\n   * @param {number} seekingTime - Time in seconds to determine thumbnail frame.\n   */\n  calculateFrame(seekingTime) {\n    const {\n      interval,\n      columns,\n      thumbnailHeight,\n      thumbnailWidth\n    } = this.options().sprite;\n    const frame = Math.floor(seekingTime / (interval / 1000));\n    const row = Math.floor(frame / columns);\n    const col = frame % columns;\n    const yPosition = row * thumbnailHeight * this.coef;\n    const xPosition = col * thumbnailWidth * this.coef;\n    const thumb = this.$('.pbw-thumbnail');\n    thumb.style.left = `${-xPosition}px`;\n    thumb.style.top = `${-yPosition}px`;\n  }\n\n  /**\n   * Updates the component and sprite size based on the configured breakpoints.\n   */\n  resizeThumbnail() {\n    const breakpoint = this.player().currentBreakpoint();\n    const {\n      thumbnailWidth,\n      thumbnailHeight,\n      columns\n    } = this.options().sprite;\n    this.coef = this.options().breakpointsCoeficients[breakpoint] || 1;\n    this.el().style.width = `${thumbnailWidth * this.coef}px`;\n    this.el().style.height = `${thumbnailHeight * this.coef}px`;\n    this.thumbnail.width = thumbnailWidth * columns * this.coef;\n  }\n\n  /**\n   * Creates the DOM element for the component.\n   *\n   * @param {string} [tag='div'] - Tag name to use (must be 'div').\n   * @param {Object} [props={}] - DOM properties to assign.\n   * @param {Object} [attributes={}] - HTML attributes to assign.\n   *\n   * @returns {HTMLElement} The created DOM element.\n   */\n  createEl(tag = 'div', props = {}, attributes = {}) {\n    if (tag !== 'div') {\n      log$1.error(`Creating a ThumbnailPreview with an HTML element of ${tag} is not supported; the element must be a 'div'`);\n      throw new Error(`'${tag}' is not supported for ThumbnailPreview`);\n    }\n    this.thumbnail = videojs.dom.createEl('img', {\n      className: 'pbw-thumbnail',\n      src: this.options().sprite.url\n    });\n    return videojs.dom.createEl(tag, videojs.obj.merge({\n      className: this.buildCSSClass()\n    }, props), attributes, this.thumbnail);\n  }\n\n  /**\n   * Builds the CSS class string for the button.\n   *\n   * @returns {string} The CSS class string.\n   */\n  buildCSSClass() {\n    return `${super.buildCSSClass()} pbw-thumbnail-preview`;\n  }\n\n  /**\n   * Flag indicating whether the component has active listeners.\n   *\n   * @returns {boolean}\n   */\n  get active() {\n    return _classPrivateFieldGet2(_active, this);\n  }\n}\nThumbnailPreviewOverlay.prototype.options_ = {\n  className: 'pbw-thumbnail-preview',\n  displayThresholdHeight: 279,\n  resetPositionDelay: 300,\n  breakpointsCoeficients: {\n    huge: 1.7,\n    xlarge: 1.7,\n    large: 1.4,\n    medium: 1.3,\n    small: 1.2,\n    xsmall: 1,\n    tiny: 1\n  },\n  sprite: {\n    rows: 1,\n    columns: 1,\n    thumbnailWidth: 0,\n    thumbnailHeight: 0,\n    interval: 10000\n  }\n};\nvideojs.registerComponent('ThumbnailPreviewOverlay', ThumbnailPreviewOverlay);\n\n/**\n * Metadata describing the structure and timing of a thumbnail sprite sheet.\n * Used to control how thumbnails are extracted and displayed.\n *\n * @typedef {Object} ThumbnailSpriteOptions\n *\n * @property {string} url - URL to the sprite image.\n * @property {number} rows - Number of rows in the sprite grid.\n * @property {number} columns - Number of columns in the sprite grid.\n * @property {number} thumbnailWidth - Width of each thumbnail in pixels.\n * @property {number} thumbnailHeight - Height of each thumbnail in pixels.\n * @property {number} interval - Time between thumbnails in milliseconds.\n */\n\n/**\n * Breakpoint coefficient map for responsive thumbnail scaling.\n * Keys correspond to [Video.js layout breakpoints](https://videojs.com/guides/layout/#breakpoints).\n *\n * @typedef {Object.<string, number>} BreakpointCoefficients\n */\n\n/**\n * @ignore\n * @type {typeof import('video.js/dist/types/plugin').default}\n */\nconst Plugin = videojs.getPlugin('plugin');\nconst log = videojs.log.createLogger('thumbnail-preview');\n\n/**\n * Represents the ThumbnailPreview plugin that adds hover-based thumbnail\n * previews to the player's progress bar using a sprite sheet.\n */\nclass ThumbnailPreview extends Plugin {\n  /**\n   * Creates an instance of a thumbnail preview plugin.\n   *\n   * @param {import('video.js/dist/types/player.js').default} player - The video.js player instance.\n   * @param {Object} options - Configuration options.\n   * @param {import('./components/thumbnail-preview-overlay.js').ThumbnailSpriteOptions} [options.sprite] - Sprite sheet configuration.\n   * @param {import('./components/thumbnail-preview-overlay.js').BreakpointCoefficients} [options.breakpointsCoeficients] - Coefficients for responsive scaling.\n   * @param {number} [options.displayThresholdHeight] - Height threshold under which the thumbnail is hidden.\n   * @param {number} [options.resetPositionDelay=300] - Delay in milliseconds before resetting the thumbnail position after canceling (defaults to 300ms).\n   */\n  constructor(player, options) {\n    super(player);\n    if (this.isProgressControlDisabled()) {\n      log.error('Cannot initialize because no ProgressControl component was found in ' + 'the playerâ€™s ControlBar. Make sure the player is configured with ' + 'controlBar.progressControl enabled.');\n      return;\n    }\n    options = this.options_ = videojs.obj.merge(this.options_, options);\n    this.player.options({\n      controlBar: {\n        progressControl: {\n          thumbnailPreviewOverlay: options\n        }\n      }\n    });\n    this.player.ready(() => {\n      const progressControl = this.player.controlBar.progressControl;\n      this.thumbnailPreviewOverlay = progressControl.thumbnailPreviewOverlay;\n      this.thumbnailPreviewOverlay.init();\n    });\n  }\n\n  /**\n   * Determines whether the progress control is disabled in the player's options.\n   *\n   * @returns {boolean} `true` if progress control is disabled, otherwise `false`.\n   */\n  isProgressControlDisabled() {\n    var _playerOpts$controlBa;\n    const playerOpts = this.player.options();\n    return playerOpts.controlBar === false || ((_playerOpts$controlBa = playerOpts.controlBar) === null || _playerOpts$controlBa === void 0 ? void 0 : _playerOpts$controlBa.progressControl) === false || playerOpts.children && !playerOpts.children.includes('controlBar');\n  }\n\n  /**\n   * Updates the sprite used for displaying thumbnails.\n   *\n   * @param {import('./components/thumbnail-preview-overlay.js').ThumbnailSpriteOptions} sprite - New sprite configuration.\n   */\n  updateSprite(sprite) {\n    this.thumbnailPreviewOverlay.updateSprite(sprite);\n  }\n\n  /**\n   * Resets the sprite and disables the thumbnail preview.\n   */\n  resetSprite() {\n    this.thumbnailPreviewOverlay.resetSprite();\n  }\n  static get VERSION() {\n    return version;\n  }\n}\nvideojs.registerPlugin('thumbnailPreview', ThumbnailPreview);\n\nexport { ThumbnailPreview };\n//# sourceMappingURL=thumbnail-preview.js.map\n","\n  // Import the pillarbox library\n  import pillarbox from '@srgssr/pillarbox-web';\n  // Import the thumbnail-preview plugin\n  import '@srgssr/thumbnail-preview';\n\n  // Create a pillarbox player instance with the thumbnail-preview component\n  const player = pillarbox('video-element-id', { plugins: { thumbnailPreview: {} } });\n\n  // Find and set the sprite sheet on loaded metadata\n  player.on('loadedmetadata', () => {\n    const thumbnailPreview = player.thumbnailPreview();\n    const spriteSheet = player\n      .currentSource()\n      .mediaData\n      ?.chapters\n      ?.find(chapter => chapter.urn === 'urn:rts:video:15532586')\n      ?.spriteSheet;\n\n    // If there is no sprite metadata force the preview component to hide.\n    if (!spriteSheet || ! spriteSheet.url) {\n      thumbnailPreview.resetSprite();\n      return;\n    }\n\n    // Set the sprite of the thumbnail preview plugin\n    thumbnailPreview.updateSprite(spriteSheet);\n  });\n\n  // Load the video source for the player\n  player.src({ src: 'urn:rts:video:15532586', type: 'srgssr/urn' });\n","\n  import pillarbox from '@srgssr/pillarbox-web';\n  import '../../src/layout/header/core-demo-header-component.js';\n\n  document.querySelector('#close-btn').addEventListener('click', () => {\n    window.close();\n  });\n\n  window.pillarbox = pillarbox;\n"],"names":["version","_assertClassBrand","e","n","_checkPrivateRedeclaration","_classPrivateFieldGet2","s","a","_classPrivateFieldInitSpec","_classPrivateFieldSet2","r","Component","videojs","log$1","_onCancel","_onMove","_onPlayerResize","_onEmpty","_active","ThumbnailPreviewOverlay","player","options","_this$player$controlB","sprite","progressControl","height","_this$options$resetPo","event","rect","point","position","seekingTime","xPoint","compoundMargin","rightBoundary","leftBoundary","interval","columns","thumbnailHeight","thumbnailWidth","frame","row","col","yPosition","xPosition","thumb","breakpoint","tag","props","attributes","Plugin","log","ThumbnailPreview","_playerOpts$controlBa","playerOpts","pillarbox","thumbnailPreview","spriteSheet","_c","_b","_a","chapter"],"mappings":"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","x_google_ignoreList":[0]}