{"version":3,"file":"countdown-DjAyKztG.js","sources":["../../static/showcases/countdown.html?html-proxy&index=0.js","../../static/showcases/countdown.html?html-proxy&index=1.js"],"sourcesContent":["\n      // Import the pillarbox library\n      import pillarbox from '@srgssr/pillarbox-web';\n\n      const ModalDialog = pillarbox.getComponent('ModalDialog');\n\n      /**\n       * Provides a countdown timer functionality within a modal dialog.\n       */\n      class Countdown extends ModalDialog {\n        /**\n         * Creates an instance of Countdown.\n         *\n         * @param {Player} player The video.js player instance\n         * @param {Object} options Configuration options for the modal dialog\n         */\n        constructor(player, options) {\n          const opts = pillarbox.obj.merge(options, {\n            pauseOnOpen: false,\n            fillAlways: true,\n            temporary: false,\n            uncloseable: true\n          });\n\n          super(player, opts);\n\n          this.intervalId = undefined;\n          this.reset = this.reset.bind(this);\n\n          this.on(player, ['loadstart', 'playerreset', 'dispose', 'error'], this.reset);\n        }\n\n        /**\n         * The CSS class name for the countdown modal dialog.\n         *\n         * @returns {string} The CSS class name\n         */\n        buildCSSClass() {\n          return `pillarbox-countdown ${super.buildCSSClass()}`;\n        }\n\n        /**\n         * Disposes of the countdown component.\n         *\n         * Cleans up any resources and event listeners.\n         */\n        dispose() {\n          this.reset();\n          this.off(this.player(), ['loadstart', 'playerreset', 'dispose', 'error'], this.reset);\n\n          super.dispose();\n        }\n\n        /**\n         * Resets the countdown timer.\n         *\n         * Clears the interval, closes the modal, and empties its content.\n         */\n        reset() {\n          this.clearInterval(this.intervalId);\n          this.close();\n          this.empty();\n\n          this.intervalId = undefined;\n        }\n\n        /**\n         * Starts the countdown timer.\n         *\n         * @param {number} timestamp The target timestamp in milliseconds\n         * @param {string} source The source to play when the countdown ends\n         *\n         * @returns {boolean} True if the countdown started successfully\n         */\n        start(timestamp, source) {\n          this.reset();\n\n          if (typeof timestamp !== 'number') return;\n\n          this.intervalId = this.setInterval(() => {\n            const remainingDuration = this.remainingDuration(timestamp);\n\n            if (remainingDuration.totalInMilliseconds <= 0) {\n              this.reset();\n              this.player().src(source);\n\n              return;\n            }\n\n            this.fillWith(`${remainingDuration.days\n              }d ${remainingDuration.hours\n              }h ${remainingDuration.minutes\n              }m ${remainingDuration.seconds\n              }s remaining`);\n          }, 1_000);\n\n          this.open();\n\n          return true;\n        }\n\n        /**\n         * The remaining duration until the target timestamp.\n         *\n         * @param {number} timestamp The target timestamp in milliseconds\n         *\n         * @returns {Object} An object containing the remaining days, hours, minutes, seconds, and total in milliseconds\n         */\n        remainingDuration(timestamp) {\n          const SECONDS_IN_MS = 1_000;\n          const MINUTES = 60 * SECONDS_IN_MS;\n          const HOURS = 60 * MINUTES;\n          const DAYS = 24 * HOURS;\n          const totalInMilliseconds = timestamp - Date.now();\n\n          let diff = totalInMilliseconds;\n          // Calculate days, hours, minutes, and seconds\n          let days = Math.floor(diff / DAYS);\n          diff -= days * DAYS;\n\n          let hours = Math.floor(diff / HOURS);\n          diff -= hours * HOURS;\n\n          let minutes = Math.floor(diff / MINUTES);\n          diff -= minutes * MINUTES;\n\n          let seconds = Math.floor(diff / SECONDS_IN_MS);\n\n          return {\n            days: days.toString().padStart(2, '0'),\n            hours: hours.toString().padStart(2, '0'),\n            minutes: minutes.toString().padStart(2, '0'),\n            seconds: seconds.toString().padStart(2, '0'),\n            totalInMilliseconds\n          }\n        }\n      }\n\n      // Register Countdown component\n      pillarbox.registerComponent('Countdown', Countdown);\n\n      // Create a pillarbox player instance with the countdown component\n      const player = pillarbox(\n        'video-element-id',\n        {\n          muted: true,\n          fill: true,\n          // Add the countdown component to the player\n          countdown: true,\n        }\n      );\n\n      // Listen for player errors\n      player.on('error', () => {\n        // Get the metadata associated with the error\n        const { metadata = {} } = player.error() || {};\n\n        // If the error is not of type STARTDATE we do nothing\n        if (metadata.errorType !== 'STARTDATE') return;\n\n        // Extract the validFrom property from the mediaData\n        const {\n          src: {\n            mediaData: {\n              chapters: [{ validFrom } = {}] = []\n            } = {}\n          } = {}\n        } = metadata;\n        const timestamp = new Date(validFrom).getTime();\n\n        if (!player.countdown.start(timestamp, player.currentSource())) return;\n\n        // Closes error display component to prevent overlapping\n        if (player.errorDisplay && player.errorDisplay.opened()) {\n          player.errorDisplay.close();\n        }\n      });\n\n      // In the absence of media generating a STARTDATE error, this function\n      // manually activates the countdown\n      player.countdown.start(Date.now() + 5_977_235_000, { src: 'urn:rts:video:10894383', type: 'srgssr/urn' });\n\n      // If a media sends a STARTDATE error, the countdown is automatically\n      // activated, since the logic for activating the countdown is handled by\n      // the error event handler\n      // player.src({ src: 'urn:rts:video:10894383', type: 'srgssr/urn' });\n\n      window.player = player;\n    ","\n      import pillarbox from '@srgssr/pillarbox-web';\n      import '../../src/layout/header/core-demo-header-component.js';\n\n      document.querySelector('#close-btn').addEventListener('click', () => {\n        window.close();\n      });\n\n      window.pillarbox = pillarbox;\n    "],"names":["ModalDialog","pillarbox","Countdown","player","options","opts","timestamp","source","remainingDuration","totalInMilliseconds","diff","days","hours","minutes","seconds","metadata","validFrom"],"mappings":"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"}